name: Darknet Continuous Integration

on: 
  workflow_dispatch:
    inputs:
      cuda-version:
        description: 'CUDA version for Linux build. For example: 10.1, 10.2. This parameter has no effect for Windows.'
        required: true
        default: '10.2'

jobs:
  ubuntu-cuda:
    runs-on: ubuntu-18.04
    container: nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04
    env:
      CMAKE_INSTALL_DIR: /home/cmake
    steps:
    - name: Checkout 
      uses: actions/checkout@v2

    - name: LS
      run: echo $LD_LIBRARY_PATH

    - name: Install CMake
      run: |
        apt update && DEBIAN_FRONTEND=noninteractive apt install  -y wget
        wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.sh -q -O ./cmake-install.sh 
        chmod u+x ./cmake-install.sh
        mkdir "$CMAKE_INSTALL_DIR"
        ./cmake-install.sh --skip-license --prefix="$CMAKE_INSTALL_DIR"
        rm ./cmake-install.sh

    - name: Install OpenCV
      run: DEBIAN_FRONTEND=noninteractive apt install -y libopencv-dev

    - name: Build yolo
      run: |
        LD_LIBRARY_PATH="/usr/local/nvidia/lib64/stubs:$LD_LIBRARY_PATH"
        PATH=$PATH:"$CMAKE_INSTALL_DIR"/bin
        ./build.sh

  # ubuntu-cpu:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Update apt
  #     run: sudo apt update
  #   - name: Install OpenCV
  #     run: sudo apt install libopencv-dev

  #   - name: 'Build with CMake and Ninja'
  #     uses: lukka/run-cmake@v2
  #     with:
  #       cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
  #       cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
  #       useVcpkgToolchainFile: false
  #       buildDirectory: '${{ runner.workspace }}/buildDirectory'
  #       cmakeAppendedArgs: "-DCMAKE_BUILD_TYPE=Release"
  #       cmakeBuildType: 'Release'
  #       buildWithCMakeArgs: '--target install --parallel 2'
